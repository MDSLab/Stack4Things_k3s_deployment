apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.35.0 (9532ceef3)
  labels:
    io.kompose.service: keystone
  name: keystone
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: keystone
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.35.0 (9532ceef3)
      labels:
        io.kompose.service: keystone
    spec:
      containers:
        - args:
            - /bin/bash
            - -c
            - "\necho '[INFO] Modifico il file keystone.conf con la stringa di connessione';\nsed -i \"s|^connection *=.*|connection = mysql+pymysql://keystone:unime@iotronic-db/keystone|\" /etc/keystone/keystone.conf;\necho '[INFO] Avvio della configurazione Keystone...';\n\necho '[INFO] Attesa del database Keystone...';\nchown -R keystone:keystone /var/log/keystone\nchmod 777 /var/log/keystone/keystone-manage.log;\nexport DB_CONNECTION_STRING=\"mysql+pymysql://keystone:unime@iotronic-db/keystone\";\nuntil mysql -h iotronic-db -uroot -punime -e 'SELECT 1' >/dev/null 2>&1; do\n  echo '[INFO] Database non ancora pronto, riprovo...';\n  sleep 5;\ndone;\necho '[INFO] Database pronto!';\n\necho '[INFO] Configurazione del database Keystone...';\nmysql -u root -punime -h iotronic-db <<EOF\nCREATE DATABASE IF NOT EXISTS keystone;\nCREATE DATABASE IF NOT EXISTS iotronic;\nCREATE USER IF NOT EXISTS 'keystone'@'%' IDENTIFIED BY 'unime';\nCREATE USER IF NOT EXISTS 'iotronic'@'%' IDENTIFIED BY 'unime';\nGRANT ALL PRIVILEGES ON keystone.* TO 'keystone'@'%';\nGRANT ALL PRIVILEGES ON iotronic.* TO 'iotronic'@'%';\nFLUSH PRIVILEGES;\nEOF\n\n\necho '[INFO] Creazione delle cartelle per le chiavi Fernet e credenziali...';\nmkdir -p /etc/keystone/fernet-keys;\nmkdir -p /etc/keystone/credential-keys;\nchown -R keystone:keystone /etc/keystone;\n\necho '[INFO] Controllo chiavi Fernet...';\nif [ ! -f /etc/keystone/fernet-keys/0 ]; then\n  echo '[INFO] Nessuna chiave Fernet trovata, eseguo fernet_setup...';\n  su -s /bin/sh -c 'keystone-manage fernet_setup --keystone-user keystone --keystone-group keystone' keystone;\nelse\n  echo '[INFO] Chiavi Fernet già presenti, salto la generazione.';\nfi\n\necho '[INFO] Controllo chiavi di credenziali crittografate...';\nif [ ! -f /etc/keystone/credential-keys/0 ]; then\n  echo '[INFO] Nessuna chiave di credenziali trovata, eseguo credential_setup...';\n  su -s /bin/sh -c 'keystone-manage credential_setup --keystone-user keystone --keystone-group keystone' keystone;\nelse\n  echo '[INFO] Chiavi di credenziali già presenti, salto la generazione.';\nfi\n\necho '[INFO] Sincronizzazione delle tabelle di Keystone...';\nsu -s /bin/sh -c 'keystone-manage db_sync' keystone;\n\necho '[INFO] Bootstrap di Keystone...';\nsu -s /bin/sh -c 'keystone-manage bootstrap --bootstrap-password s4t --bootstrap-admin-url http://keystone:5000/v3 --bootstrap-internal-url http://keystone:5000/v3 --bootstrap-public-url http://keystone:5000/v3 --bootstrap-region-id RegionOne' keystone;\n\necho '[INFO] Verifica e avvio di Apache...';\nif ! pgrep -x apache2 > /dev/null; then\n  echo '[INFO] Apache non è in esecuzione, lo avvio...';\n  exec apache2ctl -D FOREGROUND &\nelse\n  echo '[INFO] Apache è già in esecuzione.';\nfi\n\necho '[INFO] Creazione dei servizi di Iotronic...';\nsu -s /bin/sh -c 'openstack project create --domain default --description \"Service Project\" service' keystone;\nsu -s /bin/sh -c 'openstack service create iot --name Iotronic' keystone;\necho '[INFO] Iotronic User Create...';\nsu -s /bin/sh -c 'openstack user create --password unime iotronic' keystone;\n\necho '[INFO] Iotronic roles...';\nsu -s /bin/sh -c 'openstack role add --project service --user iotronic admin' keystone;\nsu -s /bin/sh -c 'openstack role create admin_iot_project' keystone;\nsu -s /bin/sh -c 'openstack role create manager_iot_project' keystone;\nsu -s /bin/sh -c 'openstack role create user_iot' keystone;\nsu -s /bin/sh -c 'openstack role add --project service --user iotronic admin_iot_project' keystone;\nsu -s /bin/sh -c 'openstack role add --project admin --user admin admin_iot_project' keystone;\n\necho '[INFO] Iotronic endpoints...';\nsu -s /bin/sh -c 'openstack endpoint create --region RegionOne iot public http://iotronic-conductor:8812' keystone;\nsu -s /bin/sh -c 'openstack endpoint create --region RegionOne iot internal http://iotronic-conductor:8812' keystone;\nsu -s /bin/sh -c 'openstack endpoint create --region RegionOne iot admin http://iotronic-conductor:8812' keystone;\necho '[INFO] End of configuration!';  \n\ntouch /tmp/keystone-setup-done;  \n\nexec tail -f /dev/null"
          env:
            - name: ADMIN_PASS
              value: s4t
            - name: DB_CONNECTION_STRING
              value: mysql+pymysql://keystone:unime@iotronic-db/keystone
            - name: DB_HOST
              value: iotronic-db
            - name: KEYSTONE_DBPASS
              value: unime
            - name: KEYSTONE_DB_NAME
              value: keystone
            - name: KEYSTONE_DB_USER
              value: keystone
            - name: OS_AUTH_URL
              value: http://keystone:5000/v3
            - name: OS_IDENTITY_API_VERSION
              value: "3"
            - name: OS_PASSWORD
              value: s4t
            - name: OS_PROJECT_DOMAIN_NAME
              value: Default
            - name: OS_PROJECT_NAME
              value: admin
            - name: OS_USERNAME
              value: admin
            - name: OS_USER_DOMAIN_NAME
              value: Default
            - name: RABBIT_PASS
              value: unime
            - name: REGION_NAME
              value: RegionOne
          image: lucadagati/iotronic-keystone
          livenessProbe:
            exec:
              command:
                - test
                - -f
                - /tmp/keystone-setup-done
            failureThreshold: 5
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
          name: keystone
          ports:
            - containerPort: 5000
              protocol: TCP
      restartPolicy: Always
